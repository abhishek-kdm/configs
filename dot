#!/bin/sh

USAGE="usage: $0 [option] src dest
options:
  link      sync with symlinks from 'src' dir to 'dest' dir.
  unlink    remove all 'src' dir symlinks from 'dest' dir."

trap '[ "$?" -ne 0 ] && echo "$USAGE"' EXIT

[ "$#" -lt 3 ] && exit 1

getRelativePath() {
  echo "$(cd $(dirname $1); pwd)/$(basename $1)"
}

query=$1
SRC=$(getRelativePath $2)
DEST=$(getRelativePath $3)

DEFAULT="\033[0m"
GREEN="\033[92m"
YELLOW="\033[93m"
BLUE="\033[94m"

link() {
  paths=$(
    cd $(dirname $SRC)/$(basename $SRC) && tree -iafI "\.git" --noreport . \
      | cut -d \/ -f 2- \
      | egrep "^\.\w+" \
      | egrep -v "^\.git"
  )

  for path in $paths; do
    s=$SRC/$path
    d=$DEST/$path

    if [ -f $s ]; then
      echo -e "$GREEN[+] Linking: $path$DEFAULT"
      ln -rsf $s $d
    else
      if [ -d $d ]; then
        echo -e "$YELLOW[?] Ignoring directory: $path$DEFAULT"
      else
        echo -e "$BLUE[+] Creating directory: $path$DEFAULT"
        mkdir $d
      fi
    fi
  done
}

unlink() {
  paths=$(
    cd $(dirname $SRC)/$(basename $SRC) && tree --dirsfirst -iafI "\.git" --noreport . \
      | cut -d \/ -f 2- \
      | egrep "^\.\w+" \
      | egrep -v "^\.git" \
      | sed '1!G;h;$!d'
  )

  for path in $paths; do
    d=$DEST/$path
    if [ -f $d ]; then
      echo -e "$GREEN[+] Unlinking: $path$DEFAULT"
      rm $d
    fi

    if [ -d $d ] && [ $(ls $d | wc -l) -eq 0 ]; then
      echo -e "$YELLOW[+] Removing Empty Directory: $path$DEFAULT"
      rm -rf $d
    fi
  done
}

case $query in
  "link"    ) link   ;;
  "unlink"  ) unlink ;;
  *         ) exit 1 ;;
esac

